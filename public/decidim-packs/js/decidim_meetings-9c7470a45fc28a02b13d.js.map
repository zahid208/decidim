{"version":3,"file":"js/decidim_meetings-9c7470a45fc28a02b13d.js","mappings":"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","sources":["webpack://decidim_app_live//home/zahid/.rvm/gems/ruby-2.7.2/gems/decidim-meetings-0.25.2/app/packs/images|sync|/^\\.\\/.*$/","webpack://decidim_app_live/webpack/bootstrap","webpack://decidim_app_live/webpack/runtime/hasOwnProperty shorthand","webpack://decidim_app_live/webpack/runtime/publicPath","webpack://decidim_app_live/../.rvm/gems/ruby-2.7.2/gems/decidim-core-0.25.2/app/packs/src/decidim/geocoding/coordinate_input.js","webpack://decidim_app_live/../.rvm/gems/ruby-2.7.2/gems/decidim-core-0.25.2/app/packs/src/decidim/geocoding/attach_input.js","webpack://decidim_app_live/../.rvm/gems/ruby-2.7.2/gems/decidim-meetings-0.25.2/app/packs/src/decidim/meetings/meetings_form.js","webpack://decidim_app_live/../.rvm/gems/ruby-2.7.2/gems/decidim-meetings-0.25.2/app/packs/src/decidim/meetings/poll.component.js","webpack://decidim_app_live/../.rvm/gems/ruby-2.7.2/gems/decidim-meetings-0.25.2/app/packs/src/decidim/meetings/meetings_polls.js","webpack://decidim_app_live/../.rvm/gems/ruby-2.7.2/gems/decidim-forms-0.25.2/app/packs/src/decidim/forms/option_attached_inputs.component.js","webpack://decidim_app_live/../.rvm/gems/ruby-2.7.2/gems/decidim-forms-0.25.2/app/packs/src/decidim/forms/autosortable_checkboxes.component.js","webpack://decidim_app_live/../.rvm/gems/ruby-2.7.2/gems/decidim-forms-0.25.2/app/packs/src/decidim/forms/display_conditions.component.js","webpack://decidim_app_live/../.rvm/gems/ruby-2.7.2/gems/decidim-forms-0.25.2/app/packs/src/decidim/forms/max_choices_alert.component.js","webpack://decidim_app_live/../.rvm/gems/ruby-2.7.2/gems/decidim-forms-0.25.2/app/packs/src/decidim/forms/forms.js","webpack://decidim_app_live/../.rvm/gems/ruby-2.7.2/gems/decidim-meetings-0.25.2/app/packs/entrypoints/decidim_meetings.js"],"sourcesContent":["var map = {\n\t\"./decidim/gamification/badges/decidim_gamification_badges_attended_meetings.svg\": 69636,\n\t\"./decidim/meetings/decidim_meetings.svg\": 88102\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 10787;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/decidim-packs/\";","/**\n * Get coordinate input name from a given $input\n * @param {string} coordinate - Allows to find 'latitude' or 'longitude' field.\n * @param {jQuery} $input - Address input field\n * @param {Object} options (optional) - Extra options\n * @returns {string} - Returns input name\n */\nexport default function getCoordinateInputName(coordinate, $input, options) {\n  const key = `${coordinate}Name`;\n  if (options[key]) {\n    return options[key];\n  }\n\n  const inputName = $input.attr(\"name\");\n  const subNameMatch = /\\[[^\\]]+\\]$/;\n  if (inputName.match(subNameMatch)) {\n    return inputName.replace(subNameMatch, `[${coordinate}]`);\n  }\n\n  return coordinate;\n}\n","/* eslint-disable require-jsdoc */\nimport getCoordinateInputName from \"./coordinate_input\"\n\n/**\n * You can use this method to \"attach\" front-end geocoding to any forms in the\n * front-end which have address fields with geocoding autocompletion\n * functionality already applied to them.\n *\n * To learn more about the front-end geocoding autocompletion, please refer to\n * the maps documentation at: /docs/customization/maps.md.\n *\n * When the geocoding autocompletion finishes, most of the times, its results\n * will also contain the geocoordinate information for the selected address.\n * This method allows you to pass these coordinates (latitude and longitude)\n * to the same front-end form where the geocoding autocompletion address field\n * is located at (which is the $input you pass to this method). The latitude\n * and longitude coordinates will be added or \"attached\" to the form once the\n * user selects one of the suggested addresses.\n *\n * Therefore, if there was the following geocoding autocompletion field at\n * your form:\n *   <input\n *     id=\"record_address\"\n *     type=\"text\"\n *     name=\"record[address]\"\n *     data-decidim-geocoding=\"{&quot;url&quot;:&quot;https://photon.example.org/api/&quot;}\"\n *   />\n *\n * You would then \"attach\" the geocoding result coordinates to the same form\n * where this input is at as follows:\n *   $(document).ready(function() {\n *     window.Decidim.attachGeocoding($(\"#record_address\"));\n *   });\n *\n * Now, after the user selects one of the suggested geocoding autocompletion\n * addresses and the geocoding autocompletion API provides the coordinates in\n * the results, you would have the following fields automatically generated\n * to your form:\n *   <input id=\"record_address\" type=\"text\" name=\"record[address]\" value=\"Selected address, 00210, City\" ... />\n *   <input id=\"record_latitude\" type=\"hidden\" name=\"record[latitude]\" value=\"1.123\" />\n *   <input id=\"record_longitude\" type=\"hidden\" name=\"record[longitude]\" value=\"2.234\" />\n *\n * If you would not do the attachment, these hidden longitude and latitude\n * fields would not be generated and the geocoding would have to happen at the\n * server-side when the form is submitted. The problem with that approach\n * would be that the server-side address geocoding could potentially result in\n * different coordinates than what the user actually selected in the front-end\n * because the autocompletion API can return different coordinates than the\n * geocoding API. Another reason is to avoid unnecessary calls to the\n * geocoding API as the front-end geocoding suggestion already returned the\n * coordinate values we need.\n *\n * @param {jQuery} $input The input jQuery element for the geocoded address\n *   field.\n * @param {Object} options (optional) Extra options if you want to customize\n *   the latitude and longitude element IDs or names from the default.\n * @param {function} callback (optional) Callback to run when updating the coordinates values\n * @returns {void}\n */\n\nexport default function attachGeocoding($input, options, callback) {\n  const attachOptions = $.extend({}, options);\n  const inputIdParts = $input.attr(\"id\").split(\"_\");\n  inputIdParts.pop();\n\n  const idPrefix = `${inputIdParts.join(\"_\")}`;\n\n  let latitudeName = \"latitude\";\n  let longitudeName = \"longitude\";\n\n  if ($input.length > 0) {\n    latitudeName = getCoordinateInputName(\"latitude\", $input, attachOptions);\n    longitudeName = getCoordinateInputName(\"longitude\", $input, attachOptions);\n  }\n\n  const config = $.extend({\n    latitudeId: `${idPrefix}_latitude`,\n    longitudeId: `${idPrefix}_longitude`,\n    latitudeName: latitudeName,\n    longitudeName: longitudeName\n  }, options);\n  let geocoded = false;\n\n  const createCoordinateFields = () => {\n    let $latitude = $(`#${config.latitudeId}`);\n    if ($latitude.length < 1) {\n      $latitude = $(`<input type=\"hidden\" name=\"${config.latitudeName}\" id=\"${config.latitudeId}\" />`);\n      $input.after($latitude);\n    }\n\n    let $longitude = $(`#${config.longitudeId}`);\n    if ($longitude.length < 1) {\n      $longitude = $(`<input type=\"hidden\" name=\"${config.longitudeName}\" id=\"${config.longitudeId}\" />`);\n      $input.after($longitude);\n    }\n  }\n  const clearCoordinateFields = () => {\n    if (geocoded) {\n      return;\n    }\n\n    $(`#${config.latitudeId}`).val(\"\").removeAttr(\"value\");\n    $(`#${config.longitudeId}`).val(\"\").removeAttr(\"value\");\n  };\n  const setCoordinates = (coordinates) => {\n    createCoordinateFields();\n\n    $(`#${config.latitudeId}`).val(coordinates[0]).attr(\"value\", coordinates[0]);\n    $(`#${config.longitudeId}`).val(coordinates[1]).attr(\"value\", coordinates[1]);\n  }\n\n  // When the user changes the value of the coordinate field without selecting\n  // any of the geocoding autocomplete results, clear the current latitude and\n  // longitude values to let the backend do the geocoding. Once a geocoding\n  // autocomplete value has been selected, assume the user just wants to\n  // refine the address formatting without changing the location point value.\n  // If they want, they can still modify the point in the next step of the\n  // proposal creation/editing.\n  $input.on(\"change.decidim\", () => {\n    clearCoordinateFields();\n  });\n\n  // When we receive the geocoding event on the field, update the coordinate\n  // values.\n  $input.on(\"geocoder-suggest-coordinates.decidim\", (_ev, coordinates) => {\n    setCoordinates(coordinates);\n    geocoded = true;\n    callback(coordinates)\n  });\n\n  // Set the initial values if the field defines the coordinates\n  const coordinates = `${$input.data(\"coordinates\")}`.split(\",\").map(parseFloat);\n  if (Array.isArray(coordinates) && coordinates.length === 2) {\n    setCoordinates(coordinates);\n  }\n}\n","import attachGeocoding from \"src/decidim/geocoding/attach_input\"\n\n$(() => {\n  // Adds the latitude/longitude inputs after the geocoding is done\n  const $meetingAddress = $(\"#meeting_address\");\n  if ($meetingAddress.length > 0) {\n    attachGeocoding($meetingAddress);\n  }\n\n  const $form = $(\".meetings_form\");\n  if ($form.length > 0) {\n    const $meetingTypeOfMeeting = $form.find(\"#meeting_type_of_meeting\");\n    const $meetingOnlineFields = $form.find(\".field[data-meeting-type='online']\");\n    const $meetingInPersonFields = $form.find(\".field[data-meeting-type='in_person']\");\n\n    const toggleDependsOnSelect = ($target, $showDiv, type) => {\n      const value = $target.val();\n      if (value === \"hybrid\") {\n        $showDiv.show();\n      } else {\n        $showDiv.hide();\n        if (value === type) {\n          $showDiv.show();\n        }\n      }\n    };\n\n    $meetingTypeOfMeeting.on(\"change\", (ev) => {\n      const $target = $(ev.target);\n      toggleDependsOnSelect($target, $meetingOnlineFields, \"online\");\n      toggleDependsOnSelect($target, $meetingInPersonFields, \"in_person\");\n    });\n\n    toggleDependsOnSelect($meetingTypeOfMeeting, $meetingOnlineFields, \"online\");\n    toggleDependsOnSelect($meetingTypeOfMeeting, $meetingInPersonFields, \"in_person\");\n\n\n    const $meetingRegistrationType = $form.find(\"#meeting_registration_type\");\n    const $meetingRegistrationTerms = $form.find(\"#meeting_registration_terms\");\n    const $meetingRegistrationUrl = $form.find(\"#meeting_registration_url\");\n    const $meetingAvailableSlots = $form.find(\"#meeting_available_slots\");\n\n    $meetingRegistrationType.on(\"change\", (ev) => {\n      const $target = $(ev.target);\n      toggleDependsOnSelect($target, $meetingAvailableSlots, \"on_this_platform\");\n      toggleDependsOnSelect($target, $meetingRegistrationTerms, \"on_this_platform\");\n      toggleDependsOnSelect($target, $meetingRegistrationUrl, \"on_different_platform\");\n    });\n\n    toggleDependsOnSelect($meetingRegistrationType, $meetingAvailableSlots, \"on_this_platform\");\n    toggleDependsOnSelect($meetingRegistrationType, $meetingRegistrationTerms, \"on_this_platform\");\n    toggleDependsOnSelect($meetingRegistrationType, $meetingRegistrationUrl, \"on_different_platform\");\n  }\n});\n","/* eslint id-length: [\"error\", { \"exceptions\": [\"$\"] }] */\n\n/**\n * A plain Javascript component that handles questions from polls in meetings:\n *   - fetches them via Ajax\n *   - enables a polling to automatically update them\n *\n * @class\n * @augments Component\n */\n\n// This is necessary for testing purposes\nconst $ = window.$;\n\n// Default question states\nconst OPEN = \"open\";\nconst CLOSED = \"closed\";\n\nexport default class PollComponent {\n  constructor($element, config, $counter = null) {\n    this.$element = $element;\n    this.$counter = $counter;\n    this.questionsUrl = config.questionsUrl;\n    this.pollingInterval = config.pollingInterval || 5000;\n    this.mounted = false;\n    this.questions = {};\n  }\n\n  /**\n   * Returns if the component is mounted or not\n   * @public\n   * @returns {Void} - Returns nothing\n   */\n  isMounted() {\n    return this.mounted;\n  }\n\n  /**\n   * Handles the logic for mounting the component\n   * @public\n   * @returns {Void} - Returns nothing\n   */\n  mountComponent() {\n    if (this.$element.length > 0 && !this.mounted) {\n      this.mounted = true;\n      this._fetchQuestions();\n    }\n  }\n\n  unmountComponent() {\n    if (this.mounted) {\n      this.mounted = false;\n      this._stopPolling();\n      this.$element.html(\"\");\n    }\n  }\n\n  /**\n   * Performs the ajax call that updates the list of questions\n   * Before, stores the current questions states to apply them after the ajax call has\n   * been completed\n   * @private\n   * @returns {Void} - Returns nothing\n   */\n  _fetchQuestions() {\n    // Store current questions state (open / closed) before overwritting them with the Ajax call\n    // response.\n    this._storeQuestionState(this.$element);\n\n    $.ajax({\n      url: this.questionsUrl,\n      method: \"GET\",\n      contentType: \"application/javascript\"\n    }).done(() => {\n      this._updateCounter();\n      this._setQuestionsState(this.$element);\n      this._pollQuestions();\n    });\n  }\n\n  /**\n   * Iterates over all existing questions and stores the state in an internal attribute.\n   * @private\n   * @param {jQuery} $parent - The HTML content for the questionnaire.\n   * @returns {Void} - Returns nothing\n   */\n  _storeQuestionState($parent) {\n    $(\"[data-question]\", $parent).each((_i, el) => {\n      const $el = $(el);\n      const questionId = $el.data(\"question\");\n      if ($el[0].open === true) {\n        this.questions[questionId] = OPEN;\n      } else {\n        this.questions[questionId] = CLOSED;\n      }\n    });\n  }\n\n  /**\n   * Initializes the states of all the questions.\n   * @private\n   * @param {jQuery} $parent - The HTML container for the questionnaire.\n   * @returns {Void} - Returns nothing\n   */\n  _setQuestionsState($parent) {\n    $(\"[data-question]\", $parent).each((_i, el) => {\n      this._setQuestionState($(el));\n    });\n  }\n\n  /**\n   * Initializes the state of a single question with two types of modifications:\n   *   - sets the is-new class if the question is new (doesn't exist in the internal list)\n   *   - sets the state to open if it was open in the internal list\n   * @private\n   * @param {jQuery} $el - The HTML container for the questionnaire.\n   * @returns {Void} - Returns nothing\n   */\n  _setQuestionState($el) {\n    const questionId = $el.data(\"question\");\n    // Current question state\n    const state = this.questions[questionId];\n    // New questions have a special class\n    if (!state) {\n      $el.addClass(\"is-new\");\n    } else if (state === OPEN) {\n      $el.prop(OPEN, true);\n    }\n  }\n\n  /**\n   * Sets a timeout to poll new questions.\n   * @private\n   * @returns {Void} - Returns nothing\n   */\n  _pollQuestions() {\n    this._stopPolling();\n\n    this.pollTimeout = setTimeout(() => {\n      this._fetchQuestions();\n    }, this.pollingInterval);\n  }\n\n  /**\n   * Stops polling for new questions.\n   * @private\n   * @returns {Void} - Returns nothing\n   */\n  _stopPolling() {\n    if (this.pollTimeout) {\n      clearTimeout(this.pollTimeout);\n    }\n  }\n\n  /**\n   * Updates the counter with the number of questions returned in the Ajax call\n   * @private\n   * @returns {Void} - Returns nothing\n   */\n  _updateCounter() {\n    if (this.$counter) {\n      const questionsCount = this.$element.find(\"details\").length;\n      this.$counter.html(`(${questionsCount})`);\n    }\n  }\n}\n","import MeetingsPollComponent from \"src/decidim/meetings/poll.component\"\nconst OPEN_CLASS = \"is-open\";\n\n$(() => {\n  // Mount polls component for users\n  const $container = $(\"[data-decidim-meetings-poll]\");\n  const $counter = $(\"#visible-questions-count\");\n  const poll = new MeetingsPollComponent($container, $container.data(\"decidim-meetings-poll\"), $counter);\n\n  $(\".meeting-polls__action-list\").on(\"click\", (event) => {\n    event.preventDefault();\n\n    if (poll.isMounted()) {\n      $(event.target).removeClass(OPEN_CLASS);\n      $container.removeClass(OPEN_CLASS);\n      poll.unmountComponent();\n    } else {\n      $(event.target).addClass(OPEN_CLASS);\n      $container.addClass(OPEN_CLASS);\n      poll.mountComponent();\n    }\n  });\n\n  // Mount polls component for admins\n  const $adminContainer = $(\"[data-decidim-admin-meetings-poll]\");\n  const adminPoll = new MeetingsPollComponent($adminContainer, $adminContainer.data(\"decidim-admin-meetings-poll\"));\n\n  $(\".meeting-polls__action-administrate\").on(\"click\", (event) => {\n    event.preventDefault();\n\n    if (adminPoll.isMounted()) {\n      $(event.target).removeClass(OPEN_CLASS);\n      $adminContainer.removeClass(OPEN_CLASS);\n      adminPoll.unmountComponent();\n    } else {\n      $(event.target).addClass(OPEN_CLASS);\n      $adminContainer.addClass(OPEN_CLASS);\n      adminPoll.mountComponent();\n    }\n  });\n});\n","/* eslint-disable require-jsdoc */\n\nclass OptionAttachedInputsComponent {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this.controllerFieldSelector = options.controllerFieldSelector;\n    this.dependentInputSelector = options.dependentInputSelector;\n    this.controllerSelector = this.wrapperField.find(this.controllerFieldSelector);\n    this._bindEvent();\n    this._run();\n  }\n\n  _run() {\n    this.controllerSelector.each((idx, el) => {\n      const $field = $(el);\n      const enabled = $field.is(\":checked\");\n\n      $field.parents(\"div.collection-input\").find(this.dependentInputSelector).prop(\"disabled\", !enabled);\n    });\n  }\n\n  _bindEvent() {\n    this.controllerSelector.on(\"change\", () => {\n      this._run();\n    });\n  }\n}\n\nexport default function createOptionAttachedInputs(options) {\n  return new OptionAttachedInputsComponent(options);\n}\n","/* eslint-disable require-jsdoc */\n/* eslint-disable no-ternary */\n\nclass AutosortableCheckboxesComponent {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this._bindEvent();\n    this._order();\n    this._normalize();\n  }\n\n  // Order by position\n  _order() {\n    const max = $(this.wrapperField).find(\".collection-input\").length;\n    $(this.wrapperField).find(\".collection-input\").each((idx, el) => {\n      const $positionField = $(el).find(\"input[name$=\\\\[position\\\\]]\");\n      const position = $positionField.val()\n        ? parseInt($positionField.val(), 10)\n        : max;\n\n      let $next = $(el).next();\n      while ($next.length > 0) {\n        const $nextPositionField = $next.find(\"input[name$=\\\\[position\\\\]]\");\n        const nextPosition = $nextPositionField.val()\n          ? parseInt($nextPositionField.val(), 10)\n          : max;\n\n        if (position > nextPosition) {\n          $next.insertBefore($(el));\n        }\n        $next = $next.next();\n      }\n    });\n  }\n\n  _findLastPosition() {\n    let lastPosition = 0;\n    $(this.wrapperField).find(\".collection-input\").each((idx, el) => {\n      const $positionField = $(el).find(\"input[name$=\\\\[position\\\\]]\");\n      const position = parseInt($positionField.val(), 10);\n      if (position > lastPosition) {\n        lastPosition = position;\n      }\n    });\n    return lastPosition;\n  }\n\n  _normalize() {\n    $(this.wrapperField).find(\".collection-input .position\").each((idx, el) => {\n      const $positionField = $(el).parent().find(\"input[name$=\\\\[position\\\\]]\");\n      if ($positionField.val()) {\n        $positionField.val(idx);\n        $positionField.prop(\"disabled\", false);\n        $(el).html(`${idx + 1}. `);\n      }\n    });\n  }\n\n  _bindEvent() {\n    $(this.wrapperField).find(\"input[type=checkbox]\").on(\"change\", (el) => {\n      const $parentLabel = $(el.target).parents(\"label\");\n      const $positionSelector = $parentLabel.find(\".position\");\n      const $positionField = $parentLabel.find(\"input[name$=\\\\[position\\\\]]\");\n      const lastPosition = this._findLastPosition();\n\n      if (el.target.checked) {\n        $positionField.val(lastPosition + 1);\n        $positionField.prop(\"disabled\", false);\n        $positionSelector.html(lastPosition + 1);\n      } else {\n        $positionField.val(\"\");\n        $positionField.prop(\"disabled\", true);\n        $positionSelector.html(\"\");\n      }\n      this._order();\n      this._normalize();\n    });\n  }\n}\n\nexport default function createAutosortableCheckboxes(options) {\n  return new AutosortableCheckboxesComponent(options);\n}\n","/* eslint-disable no-ternary, no-plusplus, require-jsdoc */\n\nclass DisplayCondition {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this.type = options.type;\n    this.conditionQuestion = options.conditionQuestion;\n    this.answerOption = options.answerOption;\n    this.mandatory = options.mandatory;\n    this.value = options.value;\n    this.onFulfilled = options.onFulfilled;\n    this.bindEvent();\n  }\n\n  bindEvent() {\n    this.checkCondition();\n    this.getInputsToListen().on(\"change\", this.checkCondition.bind(this));\n  }\n\n  getInputValue() {\n    const $conditionWrapperField = $(`.question[data-question-id='${this.conditionQuestion}']`);\n    const $textInput = $conditionWrapperField.find(\"textarea, input[type='text']:not([name$=\\\\[custom_body\\\\]])\");\n\n    if ($textInput.length) {\n      return $textInput.val();\n    }\n\n    let multipleInput = [];\n\n    $conditionWrapperField.find(\".radio-button-collection, .check-box-collection\").find(\".collection-input\").each((idx, el) => {\n      const $input = $(el).find(\"input[name$=\\\\[body\\\\]]\");\n      const checked = $input.is(\":checked\");\n\n      if (checked) {\n        const text = $(el).find(\"input[name$=\\\\[custom_body\\\\]]\").val();\n        const value = $input.val();\n        const id = $(el).find(\"input[name$=\\\\[answer_option_id\\\\]]\").val();\n\n        multipleInput.push({ id, value, text });\n      }\n    });\n\n    return multipleInput;\n  }\n\n  getInputsToListen() {\n    const $conditionWrapperField = $(`.question[data-question-id='${this.conditionQuestion}']`);\n    const $textInput = $conditionWrapperField.find(\"textarea, input[type='text']:not([name$=\\\\[custom_body\\\\]])\");\n\n    if ($textInput.length) {\n      return $textInput;\n    }\n\n    return $conditionWrapperField.find(\".collection-input\").find(\"input:not([type='hidden'])\");\n  }\n\n  checkAnsweredCondition(value) {\n    if (typeof (value) !== \"object\") {\n      return Boolean(value);\n    }\n\n    return Boolean(value.some((it) => it.value));\n  }\n\n  checkNotAnsweredCondition(value) {\n    return !this.checkAnsweredCondition(value);\n  }\n\n  checkEqualCondition(value) {\n    if (value.length) {\n      return value.some((it) => it.id === this.answerOption.toString());\n    }\n    return false;\n  }\n\n  checkNotEqualCondition(value) {\n    if (value.length) {\n      return value.every((it) => it.id !== this.answerOption.toString());\n    }\n    return false;\n  }\n\n  checkMatchCondition(value) {\n    let regexp = new RegExp(this.value, \"i\");\n\n    if (typeof (value) !== \"object\") {\n      return Boolean(value.match(regexp));\n    }\n\n    return value.some(function (it) {\n      return it.text\n        ? it.text.match(regexp)\n        : it.value.match(regexp)\n    });\n  }\n\n  checkCondition() {\n    const value = this.getInputValue();\n    let fulfilled = false;\n\n    switch (this.type) {\n    case \"answered\":\n      fulfilled = this.checkAnsweredCondition(value);\n      break;\n    case \"not_answered\":\n      fulfilled = this.checkNotAnsweredCondition(value);\n      break;\n    case \"equal\":\n      fulfilled = this.checkEqualCondition(value);\n      break;\n    case \"not_equal\":\n      fulfilled = this.checkNotEqualCondition(value);\n      break;\n    case \"match\":\n      fulfilled = this.checkMatchCondition(value);\n      break;\n    default:\n      fulfilled = false;\n      break;\n    }\n\n    this.onFulfilled(fulfilled);\n  }\n}\n\nclass DisplayConditionsComponent {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this.conditions = {};\n    this.showCount = 0;\n    this.initializeConditions();\n  }\n\n  initializeConditions() {\n    const $conditionElements = this.wrapperField.find(\".display-condition\");\n\n    $conditionElements.each((idx, el) => {\n      const $condition = $(el);\n      const id = $condition.data(\"id\");\n      this.conditions[id] = {};\n\n      this.conditions[id] = new DisplayCondition({\n        wrapperField: this.wrapperField,\n        type: $condition.data(\"type\"),\n        conditionQuestion: $condition.data(\"condition\"),\n        answerOption: $condition.data(\"option\"),\n        mandatory: $condition.data(\"mandatory\"),\n        value: $condition.data(\"value\"),\n        onFulfilled: (fulfilled) => {\n          this.onFulfilled(id, fulfilled);\n        }\n      });\n    });\n  }\n\n  mustShow() {\n    const conditions = Object.values(this.conditions);\n    const mandatoryConditions = conditions.filter((condition) => condition.mandatory);\n    const nonMandatoryConditions = conditions.filter((condition) => !condition.mandatory);\n\n    if (mandatoryConditions.length) {\n      return mandatoryConditions.every((condition) => condition.fulfilled);\n    }\n\n    return nonMandatoryConditions.some((condition) => condition.fulfilled);\n\n  }\n\n  onFulfilled(id, fulfilled) {\n    this.conditions[id].fulfilled = fulfilled;\n\n    if (this.mustShow()) {\n      this.showQuestion();\n    }\n    else {\n      this.hideQuestion();\n    }\n  }\n\n  showQuestion() {\n    this.wrapperField.fadeIn();\n    this.wrapperField.find(\"input, textarea\").prop(\"disabled\", null);\n    this.showCount++;\n  }\n\n  hideQuestion() {\n    if (this.showCount) {\n      this.wrapperField.fadeOut();\n    }\n    else {\n      this.wrapperField.hide();\n    }\n\n    this.wrapperField.find(\"input, textarea\").prop(\"disabled\", \"disabled\");\n  }\n}\n\nexport default function createDisplayConditions(options) {\n  return new DisplayConditionsComponent(options);\n}\n","/* eslint-disable require-jsdoc */\n\nclass MaxChoicesAlertComponent {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this.alertElement = options.alertElement;\n    this.controllerFieldSelector = options.controllerFieldSelector;\n    this.controllerCollectionSelector = options.controllerCollectionSelector;\n    this.maxChoices = options.maxChoices;\n    this.controllerSelector = this.wrapperField.find(this.controllerFieldSelector);\n    this._bindEvent();\n    this._run();\n  }\n\n  _run() {\n    const rows = this.wrapperField.find(this.controllerCollectionSelector);\n\n    let alert = false;\n\n    rows.each((rowIdx, row) => {\n      const checked = $(row).find(this.controllerFieldSelector).filter((checkboxIdx, checkbox) => $(checkbox).is(\":checked\"));\n\n      alert = alert || checked.length > this.maxChoices;\n    });\n\n    if (alert) {\n      this.alertElement.show();\n    }\n    else {\n      this.alertElement.hide();\n    }\n  }\n\n  _bindEvent() {\n    this.controllerSelector.on(\"change\", () => {\n      this._run();\n    });\n  }\n}\n\nexport default function createMaxChoicesAlertComponent(options) {\n  return new MaxChoicesAlertComponent(options);\n}\n","/* eslint-disable require-jsdoc */\n\nimport createOptionAttachedInputs from \"src/decidim/forms/option_attached_inputs.component\"\nimport createAutosortableCheckboxes from \"src/decidim/forms/autosortable_checkboxes.component\"\nimport createDisplayConditions from \"src/decidim/forms/display_conditions.component\"\nimport createMaxChoicesAlertComponent from \"src/decidim/forms/max_choices_alert.component\"\n\n$(() => {\n  $(\".radio-button-collection, .check-box-collection\").each((idx, el) => {\n    createOptionAttachedInputs({\n      wrapperField: $(el),\n      controllerFieldSelector: \"input[type=radio], input[type=checkbox]\",\n      dependentInputSelector: \"input[type=text], input[type=hidden]\"\n    });\n  });\n\n  $.unique($(\".check-box-collection\").parents(\".answer\")).each((idx, el) => {\n    const maxChoices = $(el).data(\"max-choices\");\n    if (maxChoices) {\n      createMaxChoicesAlertComponent({\n        wrapperField: $(el),\n        controllerFieldSelector: \"input[type=checkbox]\",\n        controllerCollectionSelector: \".check-box-collection\",\n        alertElement: $(el).find(\".max-choices-alert\"),\n        maxChoices: maxChoices\n      });\n    }\n  });\n\n  $(\".sortable-check-box-collection\").each((idx, el) => {\n    createAutosortableCheckboxes({\n      wrapperField: $(el)\n    })\n  });\n\n  $(\".answer-questionnaire .question[data-conditioned='true']\").each((idx, el) => {\n    createDisplayConditions({\n      wrapperField: $(el)\n    });\n  });\n\n  const $form = $(\"form.answer-questionnaire\");\n  if ($form.length > 0) {\n    $form.find(\"input, textarea, select\").on(\"change\", () => {\n      $form.data(\"changed\", true);\n    });\n\n    const safePath = $form.data(\"safe-path\").split(\"?\")[0];\n    $(document).on(\"click\", \"a\", (event) => {\n      window.exitUrl = event.currentTarget.href;\n    });\n    $(document).on(\"submit\", \"form\", (event) => {\n      window.exitUrl = event.currentTarget.action;\n    });\n\n    window.addEventListener(\"beforeunload\", (event) => {\n      const exitUrl = window.exitUrl;\n      const hasChanged = $form.data(\"changed\");\n      window.exitUrl = null;\n\n      if (!hasChanged || (exitUrl && exitUrl.includes(safePath))) {\n        return;\n      }\n\n      event.returnValue = true;\n    });\n  }\n})\n","import \"src/decidim/meetings/meetings_form\"\nimport \"src/decidim/meetings/meetings_polls\"\nimport \"src/decidim/forms/forms\"\n\n// Images\nrequire.context(\"../images\", true)\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","undefined","__webpack_modules__","obj","prop","prototype","hasOwnProperty","call","p","getCoordinateInputName","coordinate","$input","options","key","inputName","attr","subNameMatch","match","replace","attachGeocoding","callback","attachOptions","$","extend","inputIdParts","split","pop","idPrefix","join","latitudeName","longitudeName","length","config","latitudeId","longitudeId","geocoded","setCoordinates","coordinates","$latitude","after","$longitude","createCoordinateFields","val","on","removeAttr","_ev","data","parseFloat","Array","isArray","$meetingAddress","$form","$meetingTypeOfMeeting","find","$meetingOnlineFields","$meetingInPersonFields","toggleDependsOnSelect","$target","$showDiv","type","value","show","hide","ev","target","$meetingRegistrationType","$meetingRegistrationTerms","$meetingRegistrationUrl","$meetingAvailableSlots","window","OPEN","PollComponent","$element","$counter","this","questionsUrl","pollingInterval","mounted","questions","_fetchQuestions","_stopPolling","html","_storeQuestionState","ajax","url","method","contentType","done","_this","_updateCounter","_setQuestionsState","_pollQuestions","$parent","each","_i","el","$el","questionId","open","_this2","_this3","_setQuestionState","state","addClass","pollTimeout","setTimeout","_this4","clearTimeout","questionsCount","OPEN_CLASS","$container","poll","MeetingsPollComponent","event","preventDefault","isMounted","removeClass","unmountComponent","mountComponent","$adminContainer","adminPoll","OptionAttachedInputsComponent","wrapperField","controllerFieldSelector","dependentInputSelector","controllerSelector","_bindEvent","_run","idx","$field","enabled","is","parents","AutosortableCheckboxesComponent","_order","_normalize","max","$positionField","position","parseInt","$next","next","$nextPositionField","insertBefore","lastPosition","parent","$parentLabel","$positionSelector","_findLastPosition","checked","DisplayCondition","conditionQuestion","answerOption","mandatory","onFulfilled","bindEvent","checkCondition","getInputsToListen","bind","$conditionWrapperField","$textInput","multipleInput","text","push","_typeof","Boolean","some","it","checkAnsweredCondition","toString","every","regexp","RegExp","getInputValue","fulfilled","checkNotAnsweredCondition","checkEqualCondition","checkNotEqualCondition","checkMatchCondition","DisplayConditionsComponent","conditions","showCount","initializeConditions","$condition","values","mandatoryConditions","filter","condition","nonMandatoryConditions","mustShow","showQuestion","hideQuestion","fadeIn","fadeOut","MaxChoicesAlertComponent","alertElement","controllerCollectionSelector","maxChoices","rows","alert","rowIdx","row","checkboxIdx","checkbox","unique","safePath","document","exitUrl","currentTarget","href","action","addEventListener","hasChanged","includes","returnValue","require"],"sourceRoot":""}